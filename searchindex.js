Search.setIndex({"alltitles": {"1. Hardware Testing": [[6, "hardware-testing"]], "2. Interactive Testing": [[6, "interactive-testing"]], "3. ROS Integration": [[6, "ros-integration"]], "4. Programming Interface": [[6, "programming-interface"]], "API Reference": [[3, null]], "Analysis": [[1, "analysis"]], "Background Writer": [[1, "background-writer"]], "Base Interface": [[0, "base-interface"]], "Base Wrapper": [[4, "base-wrapper"]], "Basic Joint Control": [[0, "basic-joint-control"]], "Basic Logging": [[1, "basic-logging"]], "Basic Usage": [[4, "basic-usage"]], "BitTimingConfig": [[4, "bittimingconfig"]], "Board IDs": [[2, "board-ids"]], "CANFDTimingConfig": [[4, "canfdtimingconfig"]], "Command Classes": [[2, "command-classes"]], "Command Encoding": [[2, "command-encoding"]], "Command Format": [[2, "command-format"]], "Command Generation": [[2, "command-generation"]], "Command Types": [[2, "command-types"]], "Commands": [[2, "commands"]], "Configuration": [[4, "configuration"]], "Contents:": [[5, null]], "Control Modes": [[0, "control-modes"], [2, "control-modes"], [6, "control-modes"]], "Core Components": [[1, "core-components"], [3, "core-components"], [4, "core-components"]], "Core Protocol": [[2, "core-protocol"]], "Data Classes": [[0, "data-classes"]], "Data Logging": [[6, "data-logging"]], "Device Setup": [[4, "device-setup"]], "Device Types": [[4, "device-types"]], "DexHand Interface": [[0, null]], "DexHand Logger": [[1, null]], "DexHand Protocol": [[2, null]], "Directory Layout": [[1, "directory-layout"]], "Documentation Contents": [[5, "documentation-contents"]], "Enumerations": [[0, "enumerations"]], "Error Handling": [[0, "error-handling"], [0, "id1"], [2, "error-handling"], [4, "error-handling"], [6, "error-handling"]], "Error Recovery": [[4, "error-recovery"]], "Error Types": [[2, "error-types"]], "Example Usage": [[0, "example-usage"], [2, "example-usage"]], "Examples": [[1, "examples"], [4, "examples"]], "Features": [[5, "features"]], "Feedback Classes": [[2, "feedback-classes"]], "Feedback Handling": [[0, "feedback-handling"]], "Feedback Modes": [[2, "feedback-modes"]], "File Formats": [[1, "file-formats"]], "Filter Configuration": [[4, "filter-configuration"]], "Getting Started": [[5, "getting-started"]], "Hand Implementations": [[0, "hand-implementations"]], "Hardware Implementation": [[4, "hardware-implementation"]], "Hardware Setup": [[6, "hardware-setup"]], "Indices and tables": [[5, "indices-and-tables"]], "Installation": [[5, "installation"], [6, "installation"]], "Interface": [[6, "interface"]], "Joint Limits": [[0, "joint-limits"]], "Joint Plots": [[1, "joint-plots"]], "Log Entry Types": [[1, "log-entry-types"]], "Log File Structure": [[1, "log-file-structure"]], "Logger Classes": [[1, "logger-classes"]], "Main Logger": [[1, "main-logger"]], "Memory Management": [[1, "memory-management"]], "Message Filtering": [[4, "message-filtering"]], "Message Flow": [[2, "message-flow"]], "Message Processing": [[2, "message-processing"], [2, "id1"]], "Message Structure": [[2, "message-structure"]], "Message Types": [[2, "message-types"], [4, "message-types"]], "Messages": [[2, "messages"]], "Mock Implementation": [[4, "mock-implementation"]], "Next Steps": [[5, "next-steps"], [6, "next-steps"]], "Notes": [[0, "notes"], [1, "notes"], [2, "notes"], [4, "notes"]], "Overview": [[6, "overview"]], "Prerequisites": [[5, "prerequisites"], [6, "prerequisites"]], "Protocol Specification": [[2, "protocol-specification"]], "Quickstart Guide": [[6, null]], "Status Codes": [[4, "status-codes"]], "Support": [[5, "support"]], "Tactile Plots": [[1, "tactile-plots"]], "Thread Safety": [[1, "thread-safety"]], "Timing Configuration": [[4, "timing-configuration"]], "Usage Examples": [[6, "usage-examples"]], "Visualization": [[1, "visualization"], [1, "id1"]], "Visualization Options": [[1, "visualization-options"]], "Welcome to DexHand\u2019s documentation!": [[5, null]], "ZCAN Wrapper": [[4, null]]}, "docnames": ["api/dexhand_interface", "api/dexhand_logger", "api/dexhand_protocol", "api/index", "api/zcan_wrapper", "index", "quickstart"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/dexhand_interface.rst", "api/dexhand_logger.rst", "api/dexhand_protocol.rst", "api/index.rst", "api/zcan_wrapper.rst", "index.rst", "quickstart.rst"], "indexentries": {"__init__() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.__init__", false]], "__init__() (pyzlg_dexhand.dexhand_interface.leftdexhand method)": [[0, "pyzlg_dexhand.dexhand_interface.LeftDexHand.__init__", false]], "__init__() (pyzlg_dexhand.dexhand_interface.rightdexhand method)": [[0, "pyzlg_dexhand.dexhand_interface.RightDexHand.__init__", false]], "__init__() (pyzlg_dexhand.dexhand_logger.dexhandlogger method)": [[1, "pyzlg_dexhand.dexhand_logger.DexHandLogger.__init__", false]], "__init__() (pyzlg_dexhand.dexhand_logger.logwriter method)": [[1, "pyzlg_dexhand.dexhand_logger.LogWriter.__init__", false]], "__init__() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.__init__", false]], "__init__() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.__init__", false]], "angle (pyzlg_dexhand.dexhand_interface.jointfeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.JointFeedback.angle", false]], "angle (pyzlg_dexhand.dexhand_protocol.messages.motorfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.MotorFeedback.angle", false]], "arb (pyzlg_dexhand.zcan_wrapper.canfdtimingconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.CANFDTimingConfig.arb", false]], "bittimingconfig (class in pyzlg_dexhand.zcan_wrapper)": [[4, "pyzlg_dexhand.zcan_wrapper.BitTimingConfig", false]], "boarderror (class in pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardError", false]], "boardfeedback (class in pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback", false]], "boardid (class in pyzlg_dexhand.dexhand_protocol)": [[2, "pyzlg_dexhand.dexhand_protocol.BoardID", false]], "both_motors_error (pyzlg_dexhand.dexhand_protocol.messages.boarderror attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardError.BOTH_MOTORS_ERROR", false]], "brp (pyzlg_dexhand.zcan_wrapper.bittimingconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.BitTimingConfig.brp", false]], "canfdtimingconfig (class in pyzlg_dexhand.zcan_wrapper)": [[4, "pyzlg_dexhand.zcan_wrapper.CANFDTimingConfig", false]], "cascaded_pid (pyzlg_dexhand.dexhand_interface.controlmode attribute)": [[0, "pyzlg_dexhand.dexhand_interface.ControlMode.CASCADED_PID", false]], "cascaded_pid (pyzlg_dexhand.dexhand_protocol.commands.controlmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ControlMode.CASCADED_PID", false]], "channel (pyzlg_dexhand.dexhand_interface.handconfig attribute)": [[0, "pyzlg_dexhand.dexhand_interface.HandConfig.channel", false]], "clear_error (pyzlg_dexhand.dexhand_protocol.commands.commandtype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.CommandType.CLEAR_ERROR", false]], "clear_errors() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.clear_errors", false]], "clear_message_history() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.clear_message_history", false]], "clearerrorcommand (class in pyzlg_dexhand.dexhand_protocol.commands)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ClearErrorCommand", false]], "clock_hz (pyzlg_dexhand.zcan_wrapper.canfdtimingconfig property)": [[4, "pyzlg_dexhand.zcan_wrapper.CANFDTimingConfig.clock_hz", false]], "close() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.close", false]], "close() (pyzlg_dexhand.dexhand_logger.dexhandlogger method)": [[1, "pyzlg_dexhand.dexhand_logger.DexHandLogger.close", false]], "close() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.close", false]], "close() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.close", false]], "close() (pyzlg_dexhand.zcan_wrapper.zcanwrapperbase method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase.close", false]], "command_type (pyzlg_dexhand.dexhand_logger.commandlogentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.CommandLogEntry.command_type", false]], "commandlogentry (class in pyzlg_dexhand.dexhand_logger)": [[1, "pyzlg_dexhand.dexhand_logger.CommandLogEntry", false]], "commandtype (class in pyzlg_dexhand.dexhand_protocol.commands)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.CommandType", false]], "config_command (pyzlg_dexhand.dexhand_protocol.messagetype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType.CONFIG_COMMAND", false]], "config_feedback (pyzlg_dexhand.dexhand_protocol.commands.commandtype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.CommandType.CONFIG_FEEDBACK", false]], "config_response (pyzlg_dexhand.dexhand_protocol.messagetype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType.CONFIG_RESPONSE", false]], "configure_channel() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.configure_channel", false]], "configure_channel() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.configure_channel", false]], "configure_channel() (pyzlg_dexhand.zcan_wrapper.zcanwrapperbase method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase.configure_channel", false]], "control_mode (pyzlg_dexhand.dexhand_logger.commandlogentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.CommandLogEntry.control_mode", false]], "control_mode (pyzlg_dexhand.dexhand_protocol.commands.motorcommand attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.MotorCommand.control_mode", false]], "controlmode (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.ControlMode", false]], "controlmode (class in pyzlg_dexhand.dexhand_protocol.commands)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ControlMode", false]], "current (pyzlg_dexhand.dexhand_interface.controlmode attribute)": [[0, "pyzlg_dexhand.dexhand_interface.ControlMode.CURRENT", false]], "current (pyzlg_dexhand.dexhand_protocol.commands.controlmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ControlMode.CURRENT", false]], "current (pyzlg_dexhand.dexhand_protocol.messages.motorfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.MotorFeedback.current", false]], "data (pyzlg_dexhand.zcan_wrapper.canfdtimingconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.CANFDTimingConfig.data", false]], "description (pyzlg_dexhand.dexhand_protocol.messages.errorinfo attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorInfo.description", false]], "dexhandbase (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase", false]], "dexhandlogger (class in pyzlg_dexhand.dexhand_logger)": [[1, "pyzlg_dexhand.dexhand_logger.DexHandLogger", false]], "direction (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.direction", false]], "direction (pyzlg_dexhand.dexhand_protocol.messages.tactilefeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback.direction", false]], "dump_channel_state() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.dump_channel_state", false]], "dump_frame() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.dump_frame", false]], "enable (pyzlg_dexhand.dexhand_protocol.commands.feedbackconfigcommand attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackConfigCommand.enable", false]], "encode_command() (in module pyzlg_dexhand.dexhand_protocol.commands)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.encode_command", false]], "encoder1 (pyzlg_dexhand.dexhand_protocol.messages.boardfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback.encoder1", false]], "encoder2 (pyzlg_dexhand.dexhand_protocol.messages.boardfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback.encoder2", false]], "encoder_position (pyzlg_dexhand.dexhand_interface.jointfeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.JointFeedback.encoder_position", false]], "end_id (pyzlg_dexhand.zcan_wrapper.zcanfilterconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANFilterConfig.end_id", false]], "entry_type (pyzlg_dexhand.dexhand_logger.logentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.LogEntry.entry_type", false]], "error (pyzlg_dexhand.dexhand_protocol.messages.processedmessage attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ProcessedMessage.error", false]], "error (pyzlg_dexhand.zcan.zcanstatus attribute)": [[4, "pyzlg_dexhand.zcan.ZCANStatus.ERROR", false]], "error_code (pyzlg_dexhand.dexhand_protocol.messages.errorinfo attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorInfo.error_code", false]], "error_message (pyzlg_dexhand.dexhand_protocol.messagetype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType.ERROR_MESSAGE", false]], "error_type (pyzlg_dexhand.dexhand_protocol.messages.errorinfo attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorInfo.error_type", false]], "errorcode (class in pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode", false]], "errorinfo (class in pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorInfo", false]], "feedback (pyzlg_dexhand.dexhand_protocol.messages.processedmessage attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ProcessedMessage.feedback", false]], "feedbackconfigcommand (class in pyzlg_dexhand.dexhand_protocol.commands)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackConfigCommand", false]], "feedbacklogentry (class in pyzlg_dexhand.dexhand_logger)": [[1, "pyzlg_dexhand.dexhand_logger.FeedbackLogEntry", false]], "feedbackmode (class in pyzlg_dexhand.dexhand_protocol.commands)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackMode", false]], "get_errors() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.get_errors", false]], "get_feedback() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.get_feedback", false]], "get_message_history() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.get_message_history", false]], "hall_position (pyzlg_dexhand.dexhand_interface.controlmode attribute)": [[0, "pyzlg_dexhand.dexhand_interface.ControlMode.HALL_POSITION", false]], "hall_position (pyzlg_dexhand.dexhand_protocol.commands.controlmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ControlMode.HALL_POSITION", false]], "hall_scale (pyzlg_dexhand.dexhand_interface.handconfig attribute)": [[0, "pyzlg_dexhand.dexhand_interface.HandConfig.hall_scale", false]], "hand (pyzlg_dexhand.dexhand_logger.logentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.LogEntry.hand", false]], "handconfig (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.HandConfig", false]], "handfeedback (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.HandFeedback", false]], "handle_error() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.handle_error", false]], "init() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.init", false]], "invalid (pyzlg_dexhand.dexhand_protocol.messagetype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType.INVALID", false]], "joint_commands (pyzlg_dexhand.dexhand_logger.commandlogentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.CommandLogEntry.joint_commands", false]], "joint_names (pyzlg_dexhand.dexhand_interface.dexhandbase attribute)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.joint_names", false]], "jointfeedback (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.JointFeedback", false]], "joints (pyzlg_dexhand.dexhand_interface.handfeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.HandFeedback.joints", false]], "joints (pyzlg_dexhand.dexhand_logger.feedbacklogentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.FeedbackLogEntry.joints", false]], "left_hand_base (pyzlg_dexhand.dexhand_protocol.boardid attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.BoardID.LEFT_HAND_BASE", false]], "leftdexhand (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.LeftDexHand", false]], "log_command() (pyzlg_dexhand.dexhand_logger.dexhandlogger method)": [[1, "pyzlg_dexhand.dexhand_logger.DexHandLogger.log_command", false]], "log_feedback() (pyzlg_dexhand.dexhand_logger.dexhandlogger method)": [[1, "pyzlg_dexhand.dexhand_logger.DexHandLogger.log_feedback", false]], "logentry (class in pyzlg_dexhand.dexhand_logger)": [[1, "pyzlg_dexhand.dexhand_logger.LogEntry", false]], "logwriter (class in pyzlg_dexhand.dexhand_logger)": [[1, "pyzlg_dexhand.dexhand_logger.LogWriter", false]], "messagetype (class in pyzlg_dexhand.dexhand_protocol)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType", false]], "mockzcanwrapper (class in pyzlg_dexhand.zcan_wrapper)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper", false]], "mode (pyzlg_dexhand.dexhand_protocol.commands.feedbackconfigcommand attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackConfigCommand.mode", false]], "monitor_channel_status() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.monitor_channel_status", false]], "motion_command (pyzlg_dexhand.dexhand_protocol.messagetype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType.MOTION_COMMAND", false]], "motion_feedback (pyzlg_dexhand.dexhand_protocol.messagetype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType.MOTION_FEEDBACK", false]], "motor1 (pyzlg_dexhand.dexhand_protocol.messages.boardfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback.motor1", false]], "motor1_current_overload (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR1_CURRENT_OVERLOAD", false]], "motor1_error (pyzlg_dexhand.dexhand_protocol.messages.boarderror attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardError.MOTOR1_ERROR", false]], "motor1_hall_error (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR1_HALL_ERROR", false]], "motor1_param_error (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR1_PARAM_ERROR", false]], "motor1_pos (pyzlg_dexhand.dexhand_protocol.commands.motorcommand attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.MotorCommand.motor1_pos", false]], "motor1_stall_error (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR1_STALL_ERROR", false]], "motor2 (pyzlg_dexhand.dexhand_protocol.messages.boardfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback.motor2", false]], "motor2_current_overload (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR2_CURRENT_OVERLOAD", false]], "motor2_error (pyzlg_dexhand.dexhand_protocol.messages.boarderror attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardError.MOTOR2_ERROR", false]], "motor2_hall_error (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR2_HALL_ERROR", false]], "motor2_param_error (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR2_PARAM_ERROR", false]], "motor2_pos (pyzlg_dexhand.dexhand_protocol.commands.motorcommand attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.MotorCommand.motor2_pos", false]], "motor2_stall_error (pyzlg_dexhand.dexhand_protocol.messages.errorcode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode.MOTOR2_STALL_ERROR", false]], "motor_command (pyzlg_dexhand.dexhand_protocol.commands.commandtype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.CommandType.MOTOR_COMMAND", false]], "motor_enable (pyzlg_dexhand.dexhand_protocol.commands.motorcommand attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.MotorCommand.motor_enable", false]], "motorcommand (class in pyzlg_dexhand.dexhand_protocol.commands)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.MotorCommand", false]], "motorfeedback (class in pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.MotorFeedback", false]], "move_joints() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.move_joints", false]], "msg_type (pyzlg_dexhand.dexhand_protocol.messages.processedmessage attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ProcessedMessage.msg_type", false]], "normal (pyzlg_dexhand.zcan.zcanmessagetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANMessageType.NORMAL", false]], "normal_force (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.normal_force", false]], "normal_force (pyzlg_dexhand.dexhand_protocol.messages.tactilefeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback.normal_force", false]], "normal_force_delta (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.normal_force_delta", false]], "normal_force_delta (pyzlg_dexhand.dexhand_protocol.messages.tactilefeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback.normal_force_delta", false]], "num_boards (pyzlg_dexhand.dexhand_interface.dexhandbase attribute)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.NUM_BOARDS", false]], "num_motors (pyzlg_dexhand.dexhand_interface.dexhandbase attribute)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.NUM_MOTORS", false]], "offline (pyzlg_dexhand.zcan.zcanstatus attribute)": [[4, "pyzlg_dexhand.zcan.ZCANStatus.OFFLINE", false]], "ok (pyzlg_dexhand.zcan.zcanstatus attribute)": [[4, "pyzlg_dexhand.zcan.ZCANStatus.OK", false]], "on_change (pyzlg_dexhand.dexhand_protocol.commands.feedbackmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackMode.ON_CHANGE", false]], "online (pyzlg_dexhand.zcan.zcanstatus attribute)": [[4, "pyzlg_dexhand.zcan.ZCANStatus.ONLINE", false]], "open() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.open", false]], "open() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.open", false]], "open() (pyzlg_dexhand.zcan_wrapper.zcanwrapperbase method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase.open", false]], "period_ms (pyzlg_dexhand.dexhand_protocol.commands.feedbackconfigcommand attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackConfigCommand.period_ms", false]], "periodic (pyzlg_dexhand.dexhand_protocol.commands.feedbackmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackMode.PERIODIC", false]], "plot_session() (pyzlg_dexhand.dexhand_logger.dexhandlogger method)": [[1, "pyzlg_dexhand.dexhand_logger.DexHandLogger.plot_session", false]], "position (pyzlg_dexhand.dexhand_protocol.messages.motorfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.MotorFeedback.position", false]], "position_sensor1 (pyzlg_dexhand.dexhand_protocol.messages.boardfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback.position_sensor1", false]], "position_sensor2 (pyzlg_dexhand.dexhand_protocol.messages.boardfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback.position_sensor2", false]], "process_message() (in module pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.process_message", false]], "processedmessage (class in pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ProcessedMessage", false]], "protect_hall_position (pyzlg_dexhand.dexhand_interface.controlmode attribute)": [[0, "pyzlg_dexhand.dexhand_interface.ControlMode.PROTECT_HALL_POSITION", false]], "protect_hall_position (pyzlg_dexhand.dexhand_protocol.commands.controlmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ControlMode.PROTECT_HALL_POSITION", false]], "proximity (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.proximity", false]], "proximity (pyzlg_dexhand.dexhand_protocol.messages.tactilefeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback.proximity", false]], "query (pyzlg_dexhand.dexhand_protocol.commands.feedbackmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.FeedbackMode.QUERY", false]], "query_timestamp (pyzlg_dexhand.dexhand_interface.handfeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.HandFeedback.query_timestamp", false]], "receive_fd_messages() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.receive_fd_messages", false]], "receive_fd_messages() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.receive_fd_messages", false]], "receive_fd_messages() (pyzlg_dexhand.zcan_wrapper.zcanwrapperbase method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase.receive_fd_messages", false]], "reset_channel() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.reset_channel", false]], "reset_joints() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.reset_joints", false]], "right_hand_base (pyzlg_dexhand.dexhand_protocol.boardid attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.BoardID.RIGHT_HAND_BASE", false]], "rightdexhand (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.RightDexHand", false]], "run() (pyzlg_dexhand.dexhand_logger.logwriter method)": [[1, "pyzlg_dexhand.dexhand_logger.LogWriter.run", false]], "save_metadata() (pyzlg_dexhand.dexhand_logger.dexhandlogger method)": [[1, "pyzlg_dexhand.dexhand_logger.DexHandLogger.save_metadata", false]], "self_test (pyzlg_dexhand.zcan.zcanmessagetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANMessageType.SELF_TEST", false]], "send_fd_message() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.send_fd_message", false]], "send_fd_message() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.send_fd_message", false]], "send_fd_message() (pyzlg_dexhand.zcan_wrapper.zcanwrapperbase method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase.send_fd_message", false]], "send_fd_messages() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.send_fd_messages", false]], "sender_id (pyzlg_dexhand.dexhand_protocol.messages.processedmessage attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.ProcessedMessage.sender_id", false]], "set_feedback_mode() (pyzlg_dexhand.dexhand_interface.dexhandbase method)": [[0, "pyzlg_dexhand.dexhand_interface.DexHandBase.set_feedback_mode", false]], "set_filter() (pyzlg_dexhand.zcan_wrapper.mockzcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper.set_filter", false]], "set_filter() (pyzlg_dexhand.zcan_wrapper.zcanwrapper method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper.set_filter", false]], "set_filter() (pyzlg_dexhand.zcan_wrapper.zcanwrapperbase method)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase.set_filter", false]], "single (pyzlg_dexhand.zcan.zcanmessagetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANMessageType.SINGLE", false]], "single_self_test (pyzlg_dexhand.zcan.zcanmessagetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANMessageType.SINGLE_SELF_TEST", false]], "sjw (pyzlg_dexhand.zcan_wrapper.bittimingconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.BitTimingConfig.sjw", false]], "speed (pyzlg_dexhand.dexhand_interface.controlmode attribute)": [[0, "pyzlg_dexhand.dexhand_interface.ControlMode.SPEED", false]], "speed (pyzlg_dexhand.dexhand_protocol.commands.controlmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ControlMode.SPEED", false]], "stampedtactilefeedback (class in pyzlg_dexhand.dexhand_interface)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback", false]], "start_id (pyzlg_dexhand.zcan_wrapper.zcanfilterconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANFilterConfig.start_id", false]], "stop() (pyzlg_dexhand.dexhand_logger.logwriter method)": [[1, "pyzlg_dexhand.dexhand_logger.LogWriter.stop", false]], "tactile (pyzlg_dexhand.dexhand_interface.handfeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.HandFeedback.tactile", false]], "tactile (pyzlg_dexhand.dexhand_logger.feedbacklogentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.FeedbackLogEntry.tactile", false]], "tactile (pyzlg_dexhand.dexhand_protocol.messages.boardfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback.tactile", false]], "tactilefeedback (class in pyzlg_dexhand.dexhand_protocol.messages)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback", false]], "tangential_force (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.tangential_force", false]], "tangential_force (pyzlg_dexhand.dexhand_protocol.messages.tactilefeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback.tangential_force", false]], "tangential_force_delta (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.tangential_force_delta", false]], "tangential_force_delta (pyzlg_dexhand.dexhand_protocol.messages.tactilefeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback.tangential_force_delta", false]], "temperature (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.temperature", false]], "temperature (pyzlg_dexhand.dexhand_protocol.messages.tactilefeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback.temperature", false]], "timestamp (pyzlg_dexhand.dexhand_interface.jointfeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.JointFeedback.timestamp", false]], "timestamp (pyzlg_dexhand.dexhand_interface.stampedtactilefeedback attribute)": [[0, "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback.timestamp", false]], "timestamp (pyzlg_dexhand.dexhand_logger.logentry attribute)": [[1, "pyzlg_dexhand.dexhand_logger.LogEntry.timestamp", false]], "tseg1 (pyzlg_dexhand.zcan_wrapper.bittimingconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.BitTimingConfig.tseg1", false]], "tseg2 (pyzlg_dexhand.zcan_wrapper.bittimingconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.BitTimingConfig.tseg2", false]], "type (pyzlg_dexhand.zcan_wrapper.zcanfilterconfig attribute)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANFilterConfig.type", false]], "unknown (pyzlg_dexhand.dexhand_protocol.messagetype attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.MessageType.UNKNOWN", false]], "unsupported (pyzlg_dexhand.zcan.zcanstatus attribute)": [[4, "pyzlg_dexhand.zcan.ZCANStatus.UNSUPPORTED", false]], "velocity (pyzlg_dexhand.dexhand_protocol.messages.motorfeedback attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.messages.MotorFeedback.velocity", false]], "zcan_candtu_mini (pyzlg_dexhand.zcan.zcandevicetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANDeviceType.ZCAN_CANDTU_MINI", false]], "zcan_usbcan_2e_u (pyzlg_dexhand.zcan.zcandevicetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANDeviceType.ZCAN_USBCAN_2E_U", false]], "zcan_usbcanfd_100u (pyzlg_dexhand.zcan.zcandevicetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANDeviceType.ZCAN_USBCANFD_100U", false]], "zcan_usbcanfd_200u (pyzlg_dexhand.zcan.zcandevicetype attribute)": [[4, "pyzlg_dexhand.zcan.ZCANDeviceType.ZCAN_USBCANFD_200U", false]], "zcandevicetype (class in pyzlg_dexhand.zcan)": [[4, "pyzlg_dexhand.zcan.ZCANDeviceType", false]], "zcanfilterconfig (class in pyzlg_dexhand.zcan_wrapper)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANFilterConfig", false]], "zcanmessagetype (class in pyzlg_dexhand.zcan)": [[4, "pyzlg_dexhand.zcan.ZCANMessageType", false]], "zcanstatus (class in pyzlg_dexhand.zcan)": [[4, "pyzlg_dexhand.zcan.ZCANStatus", false]], "zcanwrapper (class in pyzlg_dexhand.zcan_wrapper)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapper", false]], "zcanwrapperbase (class in pyzlg_dexhand.zcan_wrapper)": [[4, "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase", false]], "zero_torque (pyzlg_dexhand.dexhand_interface.controlmode attribute)": [[0, "pyzlg_dexhand.dexhand_interface.ControlMode.ZERO_TORQUE", false]], "zero_torque (pyzlg_dexhand.dexhand_protocol.commands.controlmode attribute)": [[2, "pyzlg_dexhand.dexhand_protocol.commands.ControlMode.ZERO_TORQUE", false]]}, "objects": {"pyzlg_dexhand.dexhand_interface": [[0, 0, 1, "", "ControlMode"], [0, 0, 1, "", "DexHandBase"], [0, 0, 1, "", "HandConfig"], [0, 0, 1, "", "HandFeedback"], [0, 0, 1, "", "JointFeedback"], [0, 0, 1, "", "LeftDexHand"], [0, 0, 1, "", "RightDexHand"], [0, 0, 1, "", "StampedTactileFeedback"]], "pyzlg_dexhand.dexhand_interface.ControlMode": [[0, 1, 1, "", "CASCADED_PID"], [0, 1, 1, "", "CURRENT"], [0, 1, 1, "", "HALL_POSITION"], [0, 1, 1, "", "PROTECT_HALL_POSITION"], [0, 1, 1, "", "SPEED"], [0, 1, 1, "", "ZERO_TORQUE"]], "pyzlg_dexhand.dexhand_interface.DexHandBase": [[0, 1, 1, "", "NUM_BOARDS"], [0, 1, 1, "", "NUM_MOTORS"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "clear_errors"], [0, 2, 1, "", "close"], [0, 2, 1, "", "get_errors"], [0, 2, 1, "", "get_feedback"], [0, 2, 1, "", "init"], [0, 1, 1, "", "joint_names"], [0, 2, 1, "", "move_joints"], [0, 2, 1, "", "reset_joints"], [0, 2, 1, "", "set_feedback_mode"]], "pyzlg_dexhand.dexhand_interface.HandConfig": [[0, 1, 1, "", "channel"], [0, 1, 1, "", "hall_scale"]], "pyzlg_dexhand.dexhand_interface.HandFeedback": [[0, 1, 1, "", "joints"], [0, 1, 1, "", "query_timestamp"], [0, 1, 1, "", "tactile"]], "pyzlg_dexhand.dexhand_interface.JointFeedback": [[0, 1, 1, "", "angle"], [0, 1, 1, "", "encoder_position"], [0, 1, 1, "", "timestamp"]], "pyzlg_dexhand.dexhand_interface.LeftDexHand": [[0, 2, 1, "", "__init__"]], "pyzlg_dexhand.dexhand_interface.RightDexHand": [[0, 2, 1, "", "__init__"]], "pyzlg_dexhand.dexhand_interface.StampedTactileFeedback": [[0, 1, 1, "", "direction"], [0, 1, 1, "", "normal_force"], [0, 1, 1, "", "normal_force_delta"], [0, 1, 1, "", "proximity"], [0, 1, 1, "", "tangential_force"], [0, 1, 1, "", "tangential_force_delta"], [0, 1, 1, "", "temperature"], [0, 1, 1, "", "timestamp"]], "pyzlg_dexhand.dexhand_logger": [[1, 0, 1, "", "CommandLogEntry"], [1, 0, 1, "", "DexHandLogger"], [1, 0, 1, "", "FeedbackLogEntry"], [1, 0, 1, "", "LogEntry"], [1, 0, 1, "", "LogWriter"]], "pyzlg_dexhand.dexhand_logger.CommandLogEntry": [[1, 1, 1, "", "command_type"], [1, 1, 1, "", "control_mode"], [1, 1, 1, "", "joint_commands"]], "pyzlg_dexhand.dexhand_logger.DexHandLogger": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "close"], [1, 2, 1, "", "log_command"], [1, 2, 1, "", "log_feedback"], [1, 2, 1, "", "plot_session"], [1, 2, 1, "", "save_metadata"]], "pyzlg_dexhand.dexhand_logger.FeedbackLogEntry": [[1, 1, 1, "", "joints"], [1, 1, 1, "", "tactile"]], "pyzlg_dexhand.dexhand_logger.LogEntry": [[1, 1, 1, "", "entry_type"], [1, 1, 1, "", "hand"], [1, 1, 1, "", "timestamp"]], "pyzlg_dexhand.dexhand_logger.LogWriter": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "run"], [1, 2, 1, "", "stop"]], "pyzlg_dexhand.dexhand_protocol": [[2, 0, 1, "", "BoardID"], [2, 0, 1, "", "MessageType"]], "pyzlg_dexhand.dexhand_protocol.BoardID": [[2, 1, 1, "", "LEFT_HAND_BASE"], [2, 1, 1, "", "RIGHT_HAND_BASE"]], "pyzlg_dexhand.dexhand_protocol.MessageType": [[2, 1, 1, "", "CONFIG_COMMAND"], [2, 1, 1, "", "CONFIG_RESPONSE"], [2, 1, 1, "", "ERROR_MESSAGE"], [2, 1, 1, "", "INVALID"], [2, 1, 1, "", "MOTION_COMMAND"], [2, 1, 1, "", "MOTION_FEEDBACK"], [2, 1, 1, "", "UNKNOWN"]], "pyzlg_dexhand.dexhand_protocol.commands": [[2, 0, 1, "", "ClearErrorCommand"], [2, 0, 1, "", "CommandType"], [2, 0, 1, "", "ControlMode"], [2, 0, 1, "", "FeedbackConfigCommand"], [2, 0, 1, "", "FeedbackMode"], [2, 0, 1, "", "MotorCommand"], [2, 3, 1, "", "encode_command"]], "pyzlg_dexhand.dexhand_protocol.commands.CommandType": [[2, 1, 1, "", "CLEAR_ERROR"], [2, 1, 1, "", "CONFIG_FEEDBACK"], [2, 1, 1, "", "MOTOR_COMMAND"]], "pyzlg_dexhand.dexhand_protocol.commands.ControlMode": [[2, 1, 1, "", "CASCADED_PID"], [2, 1, 1, "", "CURRENT"], [2, 1, 1, "", "HALL_POSITION"], [2, 1, 1, "", "PROTECT_HALL_POSITION"], [2, 1, 1, "", "SPEED"], [2, 1, 1, "", "ZERO_TORQUE"]], "pyzlg_dexhand.dexhand_protocol.commands.FeedbackConfigCommand": [[2, 1, 1, "", "enable"], [2, 1, 1, "", "mode"], [2, 1, 1, "", "period_ms"]], "pyzlg_dexhand.dexhand_protocol.commands.FeedbackMode": [[2, 1, 1, "", "ON_CHANGE"], [2, 1, 1, "", "PERIODIC"], [2, 1, 1, "", "QUERY"]], "pyzlg_dexhand.dexhand_protocol.commands.MotorCommand": [[2, 1, 1, "", "control_mode"], [2, 1, 1, "", "motor1_pos"], [2, 1, 1, "", "motor2_pos"], [2, 1, 1, "", "motor_enable"]], "pyzlg_dexhand.dexhand_protocol.messages": [[2, 0, 1, "", "BoardError"], [2, 0, 1, "", "BoardFeedback"], [2, 0, 1, "", "ErrorCode"], [2, 0, 1, "", "ErrorInfo"], [2, 0, 1, "", "MotorFeedback"], [2, 0, 1, "", "ProcessedMessage"], [2, 0, 1, "", "TactileFeedback"], [2, 3, 1, "", "process_message"]], "pyzlg_dexhand.dexhand_protocol.messages.BoardError": [[2, 1, 1, "", "BOTH_MOTORS_ERROR"], [2, 1, 1, "", "MOTOR1_ERROR"], [2, 1, 1, "", "MOTOR2_ERROR"]], "pyzlg_dexhand.dexhand_protocol.messages.BoardFeedback": [[2, 1, 1, "", "encoder1"], [2, 1, 1, "", "encoder2"], [2, 1, 1, "", "motor1"], [2, 1, 1, "", "motor2"], [2, 1, 1, "", "position_sensor1"], [2, 1, 1, "", "position_sensor2"], [2, 1, 1, "", "tactile"]], "pyzlg_dexhand.dexhand_protocol.messages.ErrorCode": [[2, 1, 1, "", "MOTOR1_CURRENT_OVERLOAD"], [2, 1, 1, "", "MOTOR1_HALL_ERROR"], [2, 1, 1, "", "MOTOR1_PARAM_ERROR"], [2, 1, 1, "", "MOTOR1_STALL_ERROR"], [2, 1, 1, "", "MOTOR2_CURRENT_OVERLOAD"], [2, 1, 1, "", "MOTOR2_HALL_ERROR"], [2, 1, 1, "", "MOTOR2_PARAM_ERROR"], [2, 1, 1, "", "MOTOR2_STALL_ERROR"]], "pyzlg_dexhand.dexhand_protocol.messages.ErrorInfo": [[2, 1, 1, "", "description"], [2, 1, 1, "", "error_code"], [2, 1, 1, "", "error_type"]], "pyzlg_dexhand.dexhand_protocol.messages.MotorFeedback": [[2, 1, 1, "", "angle"], [2, 1, 1, "", "current"], [2, 1, 1, "", "position"], [2, 1, 1, "", "velocity"]], "pyzlg_dexhand.dexhand_protocol.messages.ProcessedMessage": [[2, 1, 1, "", "error"], [2, 1, 1, "", "feedback"], [2, 1, 1, "", "msg_type"], [2, 1, 1, "", "sender_id"]], "pyzlg_dexhand.dexhand_protocol.messages.TactileFeedback": [[2, 1, 1, "", "direction"], [2, 1, 1, "", "normal_force"], [2, 1, 1, "", "normal_force_delta"], [2, 1, 1, "", "proximity"], [2, 1, 1, "", "tangential_force"], [2, 1, 1, "", "tangential_force_delta"], [2, 1, 1, "", "temperature"]], "pyzlg_dexhand.zcan": [[4, 0, 1, "", "ZCANDeviceType"], [4, 0, 1, "", "ZCANMessageType"], [4, 0, 1, "", "ZCANStatus"]], "pyzlg_dexhand.zcan.ZCANDeviceType": [[4, 1, 1, "", "ZCAN_CANDTU_MINI"], [4, 1, 1, "", "ZCAN_USBCANFD_100U"], [4, 1, 1, "", "ZCAN_USBCANFD_200U"], [4, 1, 1, "", "ZCAN_USBCAN_2E_U"]], "pyzlg_dexhand.zcan.ZCANMessageType": [[4, 1, 1, "", "NORMAL"], [4, 1, 1, "", "SELF_TEST"], [4, 1, 1, "", "SINGLE"], [4, 1, 1, "", "SINGLE_SELF_TEST"]], "pyzlg_dexhand.zcan.ZCANStatus": [[4, 1, 1, "", "ERROR"], [4, 1, 1, "", "OFFLINE"], [4, 1, 1, "", "OK"], [4, 1, 1, "", "ONLINE"], [4, 1, 1, "", "UNSUPPORTED"]], "pyzlg_dexhand.zcan_wrapper": [[4, 0, 1, "", "BitTimingConfig"], [4, 0, 1, "", "CANFDTimingConfig"], [4, 0, 1, "", "MockZCANWrapper"], [4, 0, 1, "", "ZCANFilterConfig"], [4, 0, 1, "", "ZCANWrapper"], [4, 0, 1, "", "ZCANWrapperBase"]], "pyzlg_dexhand.zcan_wrapper.BitTimingConfig": [[4, 1, 1, "", "brp"], [4, 1, 1, "", "sjw"], [4, 1, 1, "", "tseg1"], [4, 1, 1, "", "tseg2"]], "pyzlg_dexhand.zcan_wrapper.CANFDTimingConfig": [[4, 1, 1, "", "arb"], [4, 4, 1, "", "clock_hz"], [4, 1, 1, "", "data"]], "pyzlg_dexhand.zcan_wrapper.MockZCANWrapper": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "clear_message_history"], [4, 2, 1, "", "close"], [4, 2, 1, "", "configure_channel"], [4, 2, 1, "", "get_message_history"], [4, 2, 1, "", "open"], [4, 2, 1, "", "receive_fd_messages"], [4, 2, 1, "", "send_fd_message"], [4, 2, 1, "", "set_filter"]], "pyzlg_dexhand.zcan_wrapper.ZCANFilterConfig": [[4, 1, 1, "", "end_id"], [4, 1, 1, "", "start_id"], [4, 1, 1, "", "type"]], "pyzlg_dexhand.zcan_wrapper.ZCANWrapper": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "close"], [4, 2, 1, "", "configure_channel"], [4, 2, 1, "", "dump_channel_state"], [4, 2, 1, "", "dump_frame"], [4, 2, 1, "", "handle_error"], [4, 2, 1, "", "monitor_channel_status"], [4, 2, 1, "", "open"], [4, 2, 1, "", "receive_fd_messages"], [4, 2, 1, "", "reset_channel"], [4, 2, 1, "", "send_fd_message"], [4, 2, 1, "", "send_fd_messages"], [4, 2, 1, "", "set_filter"]], "pyzlg_dexhand.zcan_wrapper.ZCANWrapperBase": [[4, 2, 1, "", "close"], [4, 2, 1, "", "configure_channel"], [4, 2, 1, "", "open"], [4, 2, 1, "", "receive_fd_messages"], [4, 2, 1, "", "send_fd_message"], [4, 2, 1, "", "set_filter"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:function", "4": "py:property"}, "terms": {"": [0, 6], "0": [0, 1, 2, 4, 6], "00": 1, "01": 1, "01t12": 1, "0x01": [0, 2], "0x02": 2, "0x03": 2, "0x06": 2, "0x07": [0, 2], "0x0c": 2, "0x100": [2, 4], "0x101": 4, "0x181": 2, "0x1ff": 4, "0x600": 4, "0x6ff": 4, "0x74": 2, "0xa4": 2, "1": [0, 1, 2, 4], "10": 4, "100": [1, 4], "1000": [1, 2], "1000000": 4, "10m": 2, "116": 2, "12": 0, "123": 1, "1234567890": 1, "128": 2, "14": 4, "150": [0, 6], "1536": 2, "16": 2, "164": 2, "17": [0, 2], "1mbp": 4, "2": [2, 4], "20": 6, "200": 4, "2000": 2, "200u": [5, 6], "2024": 1, "21": 4, "256": 2, "3": [2, 4, 5], "30": [0, 1, 6], "32": 2, "33": 4, "34": [0, 2], "384": 2, "4": [2, 4], "4096": 2, "4097": 2, "41": 4, "42": 4, "45": [0, 1, 6], "5": [1, 2], "500": 1, "5000000": 4, "51": [0, 2], "5mbp": 4, "6": 0, "60": [1, 6], "64": 2, "68": [0, 2], "7": 2, "8": [2, 5, 6], "85": [0, 2], "90": [0, 6], "By": 1, "For": [0, 5, 6], "If": [0, 1, 2], "In": 1, "The": [0, 1, 2, 4, 6], "__init__": [0, 1, 4], "abduct": 0, "abnorm": 0, "abstract": 4, "access": [0, 1], "accord": 2, "accuraci": 0, "actual": 1, "adapt": [5, 6], "add": 6, "addit": 0, "address": 2, "after": [0, 1, 4, 6], "all": [0, 4, 6], "allow": 0, "alwai": 1, "an": [0, 6], "analysi": [5, 6], "angl": [0, 1, 2, 6], "ani": [0, 1, 2], "anyth": 1, "api": [5, 6], "applic": [0, 5], "approach": 6, "appropri": [2, 4, 6], "ar": [0, 1, 2], "arb": 4, "arb_baudr": 4, "arbitr": 4, "arg": 1, "argument": 1, "associ": 3, "attempt": [0, 4], "autom": 6, "b": [2, 4], "back": 6, "base": [1, 2, 3], "base_id": 0, "basic": 5, "baudrat": 4, "becom": [0, 6], "befor": 1, "behavior": 2, "between": [0, 2], "bit": 4, "block": 1, "board": 0, "board_idx": 0, "boarderror": 2, "boardfeedback": 2, "boardid": 2, "bool": [0, 1, 2, 4], "both": [1, 2, 3, 5, 6], "both_motors_error": 2, "boundari": [0, 2, 4], "brp": 4, "buffer": 1, "buffer_lock": 1, "built": [5, 6], "byte": [2, 4], "call": [0, 1, 6], "callabl": 1, "can": [0, 2, 4, 6], "can_id": 2, "canbu": 6, "canfd": [2, 4, 5, 6], "cannot": 2, "capabl": [1, 5], "cascaded_pid": [0, 1, 2, 6], "chang": 6, "channel": [0, 4, 6], "check": [0, 2, 5, 6], "class": [3, 4], "clean": 4, "clear": [0, 2, 4, 6], "clear_al": 0, "clear_error": [0, 2, 6], "clear_message_histori": 4, "clearerrorcommand": 2, "clock": 4, "clock_hz": 4, "close": [0, 1, 4], "cmd_count": 1, "code": [2, 6], "collect": [1, 5], "combin": 4, "come": 1, "command": [0, 1, 3, 4, 6], "command_buff": 1, "command_typ": [1, 6], "commandlogentri": 1, "commandtyp": 2, "commun": [0, 2, 3, 4, 5, 6], "comparison": 1, "complet": [2, 4, 6], "compon": 5, "condit": [0, 1, 4], "config": [0, 2, 6], "config_command": 2, "config_feedback": 2, "config_path": 0, "config_respons": 2, "configur": [0, 1, 2, 3, 5, 6], "configure_channel": 4, "connect": 6, "consid": 0, "construct": [1, 2], "constructor": 1, "contact": 1, "contain": [2, 4], "continu": 6, "contribut": 5, "control": [1, 3, 5], "control_mod": [0, 1, 2, 6], "controlmod": [0, 1, 2, 6], "core": 5, "coupl": [0, 6], "creat": [1, 2, 6], "curl": 6, "current": [0, 2, 4], "custom": 6, "customiz": 1, "cycl": 6, "data": [1, 2, 3, 4, 5], "data_baudr": 4, "debug": [4, 6], "decim": 1, "decod": 2, "default": [0, 1, 4, 6], "definit": 3, "degre": [0, 6], "demo": 6, "descript": [0, 2, 6], "detail": [3, 4, 6], "detect": 4, "devic": [0, 3, 6], "device_index": [0, 4], "device_typ": 4, "dexhand": [3, 6], "dexhand_interfac": 0, "dexhand_log": 1, "dexhand_logg": 1, "dexhand_protocol": 2, "dexhand_ro": [5, 6], "dexhand_ros_publisher_demo": 6, "dexhandbas": [0, 3], "dexhandlogg": [1, 6], "dexter": [0, 1, 5], "diagram": 6, "dict": [0, 1, 4], "dictionari": [1, 4], "dip": 0, "direct": [0, 2, 5], "directori": 6, "disabl": 0, "disk": 1, "distal": [0, 6], "do": 1, "document": [3, 6], "dof": 0, "driver": 4, "dump": 4, "dump_channel_st": 4, "dump_fram": 4, "durat": 1, "dure": [1, 4], "e": [2, 5, 6], "each": [0, 1, 3, 6], "edit": 6, "effect": 6, "elif": 2, "els": 1, "enabl": [0, 2, 4], "enable_resist": 4, "encode_command": 2, "encoded_byt": 2, "encoder1": 2, "encoder2": 2, "encoder_posit": [0, 1], "encount": 0, "end_id": 4, "endian": 2, "enter": [0, 6], "entry_typ": 1, "enumer": 3, "environ": [5, 6], "equival": 0, "error": 1, "error_cod": 2, "error_messag": 2, "error_typ": 2, "errorcod": 2, "errorinfo": [0, 2], "especi": 6, "etc": 1, "even": 0, "exampl": [3, 5], "exist": 0, "experi": [1, 5], "experiment_info": 1, "explor": [5, 6], "export": 1, "extend": 2, "extens": 1, "f": [0, 1, 2, 4, 6], "fals": 1, "fast": 1, "faster": 0, "fb_count": 1, "featur": 6, "feedback": [1, 5, 6], "feedback_buff": 1, "feedback_data": [1, 6], "feedbackconfigcommand": 2, "feedbacklogentri": 1, "feedbackmod": [0, 2], "ff_dip": [0, 6], "ff_mcp": [0, 6], "ff_spr": [0, 6], "file": [0, 3, 4, 6], "finger": [0, 6], "fingertip": 0, "flag": [0, 2, 4], "flexion": [0, 6], "float": [0, 1, 2], "flush": 1, "forc": [0, 1, 6], "form": 1, "four": 0, "frame": [2, 4], "free": 0, "frequenc": 4, "from": [0, 1, 2, 4, 6], "futur": 1, "g": 2, "gener": [1, 3, 6], "get": [0, 1, 4, 6], "get_error": 0, "get_feedback": [0, 6], "get_message_histori": 4, "github": 5, "given": [0, 2, 4], "grasp_test": 1, "group": [1, 6], "guid": 5, "hall": 0, "hall_posit": [0, 2], "hall_scal": 0, "hand": [1, 2, 3, 5, 6], "handconfig": 0, "handfeedback": [0, 1], "handle_error": 4, "hardwar": [0, 2, 3, 5], "hardware_test": [5, 6], "heatmap": 1, "help": 6, "hex": 4, "high": [0, 3, 4], "higher": 6, "highest": 0, "histori": 4, "host": 2, "hz": 4, "i": [0, 1, 6], "id": [0, 4], "ident": 6, "identifi": 2, "implement": [1, 2, 3, 6], "import": [0, 1, 2, 4, 6], "includ": [3, 6], "independ": 0, "index": [0, 4, 5, 6], "individu": 6, "inform": [0, 2, 4, 6], "init": [0, 6], "initi": [0, 1, 4, 6], "instanc": 0, "int": [0, 2, 4], "integr": 5, "interact": [1, 5], "interfac": [3, 5], "invalid": 2, "invoc": 1, "invok": 1, "ipython": 6, "issu": 5, "item": 0, "joint": [5, 6], "joint_command": [1, 6], "joint_nam": 0, "jointfeedback": [0, 1], "json": 1, "jsonl": 1, "keyword": 1, "kwarg": 1, "launch": 6, "layer": [2, 3], "left": [0, 1, 2], "left_command": 1, "left_feedback": 1, "left_hand_bas": 2, "left_joint": 1, "left_tactil": 1, "leftdexhand": [0, 3, 6], "len": 1, "less": 0, "level": [0, 3, 4], "lf_dip": 0, "lf_mcp": 0, "lib": 4, "lib_path": 4, "librari": 4, "libusbcanfd": 4, "linux": [5, 6], "list": [0, 1, 4], "littl": [0, 2], "locat": 1, "log": [3, 4, 5], "log_command": [1, 6], "log_dir": 1, "log_feedback": [1, 6], "logentri": 1, "logger": [3, 5, 6], "logwrit": 1, "loop": 1, "low": 4, "m": 4, "mai": [0, 6], "make": 1, "map": 0, "match": 6, "max_messag": 4, "maximum": 4, "mcp": [0, 6], "mean": 1, "messag": 3, "message_typ": 2, "messagetyp": 2, "metacarpophalang": 0, "metadata": 1, "method": 1, "mf_dip": 0, "mf_mcp": 0, "middl": 0, "millisecond": [0, 4], "mock": 3, "mockzcanwrapp": 4, "mode": 1, "modul": [0, 1, 2, 3, 4, 5], "monitor": 4, "monitor_channel_statu": 4, "more": 6, "motion": [0, 2, 6], "motion_command": 2, "motion_feedback": 2, "motor": [0, 2], "motor1": 2, "motor1_current_overload": 2, "motor1_error": 2, "motor1_hall_error": 2, "motor1_param_error": 2, "motor1_po": 2, "motor1_stall_error": 2, "motor2": 2, "motor2_current_overload": 2, "motor2_error": 2, "motor2_hall_error": 2, "motor2_param_error": 2, "motor2_po": 2, "motor2_stall_error": 2, "motor_command": 2, "motor_en": 2, "motorcommand": 2, "motorfeedback": 2, "move": [0, 6], "move_joint": [0, 1, 6], "movement": 0, "msg_id": 4, "msg_type": 2, "multipl": [1, 4], "must": [0, 1], "n": 1, "name": [0, 1, 2, 4, 6], "necessari": 4, "need": [4, 6], "new": 5, "node": 6, "none": [0, 1, 2, 4], "normal": [1, 2, 4], "normal_forc": [0, 1, 2, 6], "normal_force_delta": [0, 2], "note": [3, 6], "noth": 1, "num_board": 0, "num_command": 1, "num_feedback": 1, "num_motor": 0, "number": [0, 1, 4], "object": [0, 1, 6], "obstacl": 0, "obstruct": 6, "offer": 6, "offlin": 4, "offset": 2, "ok": 4, "on_chang": 2, "onlin": 4, "open": 4, "oper": [0, 1, 2, 4], "opposit": 0, "option": [0, 2, 4, 5, 6], "order": 0, "our": 5, "out": [5, 6], "outsid": 1, "over": [1, 5], "overlaid": 1, "overrid": 1, "overview": 5, "packag": [5, 6], "page": 5, "pair": 2, "paramet": [0, 1, 2, 4], "pars": [2, 3], "path": [0, 4], "period": [0, 1, 2], "period_m": [0, 2], "permiss": [5, 6], "phase": 4, "pip": [0, 5, 6], "pleas": 6, "plot_sess": [1, 6], "png": 1, "poll": 1, "posit": [0, 1, 2, 6], "position_sensor1": 2, "position_sensor2": 2, "power": 6, "precis": [0, 6], "predefin": 6, "prefix": 2, "present": 0, "print": [0, 1, 2, 4, 6], "process": [1, 5, 6], "process_messag": 2, "processedmessag": 2, "properti": 4, "protect_hall_posit": [0, 2, 6], "protocol": [3, 5], "provid": [0, 1, 3, 4, 5, 6], "proxim": [0, 2], "publish": 6, "pull": 5, "py": [5, 6], "python": [3, 5, 6], "pyzlg_dexhand": [0, 1, 2, 4, 6], "qualnam": [0, 2, 4], "queri": 2, "query_timestamp": 0, "question": 5, "queue": 1, "quickstart": 5, "rais": 2, "raw": 2, "rclpy": 6, "read": 4, "real": [1, 3], "receiv": [2, 4], "receive_fd_messag": 4, "reconfigur": 4, "refer": [5, 6], "rel": 4, "reliabl": 6, "remain": 1, "report": 2, "repositori": 5, "request": 5, "requir": [0, 6], "reserv": 1, "reset": [0, 4, 6], "reset_channel": 4, "reset_hand": 6, "reset_joint": [0, 1, 6], "resist": 4, "respons": [0, 2, 6], "restor": 0, "result": 2, "resum": 2, "return": [0, 2, 4], "review": [5, 6], "rf_dip": 0, "rf_mcp": 0, "right": [0, 1, 2, 5, 6], "right_command": 1, "right_feedback": 1, "right_hand": 6, "right_hand_bas": 2, "right_joint": 1, "right_tactil": 1, "rightdexhand": [0, 3, 6], "ring": 0, "ro": 5, "robot": [0, 5], "robust": 0, "ros1": [5, 6], "ros2": [5, 6], "ros_nod": [5, 6], "rospi": 6, "rotat": [0, 6], "rule": 6, "run": [1, 6], "safe": [0, 1, 2], "save": [1, 6], "save_metadata": 1, "script": 6, "sdk": 6, "search": 5, "section": 3, "see": 6, "self_test": 4, "send": [2, 4, 6], "send_fd_messag": 4, "sender_id": 2, "sensor": [0, 2, 6], "sent": [0, 4], "seri": 6, "servic": 6, "session": 1, "session_dir": 1, "set": [0, 4, 6], "set_feedback_mod": 0, "set_filt": 4, "setup": 5, "setup_usb_can": [5, 6], "sever": 4, "sh": [5, 6], "share": 0, "shell": 6, "should": [1, 6], "show": [1, 6], "shutdown": 1, "signal": 6, "singl": [2, 4], "single_self_test": 4, "size": 1, "sjw": 4, "small": 1, "smoother": 6, "so": 4, "soon": 1, "sourc": [0, 1, 2, 4], "space": [5, 6], "specif": [0, 1, 3, 6], "specifi": 0, "speed": [0, 2], "spread": [0, 6], "stampedtactilefeedback": [0, 1], "standard": [2, 4], "start": [0, 2, 4, 6], "start_id": 4, "startup": 0, "state": [0, 2, 4, 6], "statist": 1, "statu": 2, "std_srv": 6, "stiff": [0, 6], "stop": 1, "store": 1, "str": [0, 1, 2, 4], "structur": 3, "subclass": 1, "submit": 5, "success": [0, 4], "successfulli": [0, 4], "sudo": [5, 6], "support": [4, 6], "sure": 1, "tab": 6, "tactil": [0, 2, 6], "tactilefeedback": 2, "take": 6, "tangenti": 1, "tangential_forc": [0, 1, 2], "tangential_force_delta": [0, 2], "target": 1, "temperatur": [0, 2], "termin": 4, "test": [4, 5], "test_dexhand": 6, "test_dexhand_interact": [5, 6], "th": [0, 1, 6], "th_dip": [0, 6], "th_mcp": [0, 1, 6], "th_rot": [0, 1, 6], "thi": [0, 1, 3, 5, 6], "threadgroup": 1, "through": 6, "thumb": [0, 6], "thumb_angl": 0, "thumb_dir": 0, "thumb_encod": 0, "thumb_forc": 0, "time": [1, 6], "timeout": 4, "timeout_m": 4, "timestamp": [0, 1, 4], "tool": [5, 6], "topic": 6, "torqu": 0, "total": 0, "track": 1, "transmiss": [2, 4], "trigger": 6, "true": [0, 1, 4, 6], "try": 5, "tseg1": 4, "tseg2": 4, "tupl": [1, 2, 4], "two": 0, "tx": 4, "tx_timeout": 4, "type": [0, 6], "typic": 1, "udev": 6, "union": 2, "uniqu": 1, "unit": 2, "unknown": 2, "unrespons": [0, 6], "unsupport": 4, "up": [4, 6], "urdf": 6, "us": [0, 1, 2, 4, 5], "usag": [3, 5], "usb": [5, 6], "usbcanfd": [4, 5, 6], "user": [5, 6], "user1": 1, "util": [3, 5, 6], "v": 1, "valu": [0, 2, 4], "valueerror": 2, "variou": 1, "vector": 1, "veloc": [0, 2], "verifi": 6, "via": [2, 5], "visual": [3, 5, 6], "wa": 1, "when": [0, 1, 2, 4, 6], "where": 1, "whether": 1, "which": 1, "whole": 0, "without": 1, "work": 6, "wrapper": [3, 5], "write": 1, "x": 4, "x00": 4, "x03": 4, "x44": 4, "yaml": [0, 6], "you": 6, "your": 6, "yyyymmdd_hhmmss": 1, "zcan": [0, 3, 5, 6], "zcan_candtu_mini": 4, "zcan_usbcan_2e_u": 4, "zcan_usbcanfd_100u": 4, "zcan_usbcanfd_200u": 4, "zcan_wrapp": 4, "zcandevicetyp": 4, "zcanfilterconfig": 4, "zcanmessageinfo": 4, "zcanmessagetyp": 4, "zcanstatu": 4, "zcanwrapp": [0, 4], "zcanwrapperbas": 4, "zero": [0, 6], "zero_torqu": [0, 2], "zlg": [4, 5, 6]}, "titles": ["DexHand Interface", "DexHand Logger", "DexHand Protocol", "API Reference", "ZCAN Wrapper", "Welcome to DexHand\u2019s documentation!", "Quickstart Guide"], "titleterms": {"": 5, "1": 6, "2": 6, "3": 6, "4": 6, "analysi": 1, "api": 3, "background": 1, "base": [0, 4], "basic": [0, 1, 4], "bittimingconfig": 4, "board": 2, "canfdtimingconfig": 4, "class": [0, 1, 2], "code": 4, "command": 2, "compon": [1, 3, 4], "configur": 4, "content": 5, "control": [0, 2, 6], "core": [1, 2, 3, 4], "data": [0, 6], "devic": 4, "dexhand": [0, 1, 2, 5], "directori": 1, "document": 5, "encod": 2, "entri": 1, "enumer": 0, "error": [0, 2, 4, 6], "exampl": [0, 1, 2, 4, 6], "featur": 5, "feedback": [0, 2], "file": 1, "filter": 4, "flow": 2, "format": [1, 2], "gener": 2, "get": 5, "guid": 6, "hand": 0, "handl": [0, 2, 4, 6], "hardwar": [4, 6], "id": 2, "implement": [0, 4], "indic": 5, "instal": [5, 6], "integr": 6, "interact": 6, "interfac": [0, 6], "joint": [0, 1], "layout": 1, "limit": 0, "log": [1, 6], "logger": 1, "main": 1, "manag": 1, "memori": 1, "messag": [2, 4], "mock": 4, "mode": [0, 2, 6], "next": [5, 6], "note": [0, 1, 2, 4], "option": 1, "overview": 6, "plot": 1, "prerequisit": [5, 6], "process": 2, "program": 6, "protocol": 2, "quickstart": 6, "recoveri": 4, "refer": 3, "ro": 6, "safeti": 1, "setup": [4, 6], "specif": 2, "start": 5, "statu": 4, "step": [5, 6], "structur": [1, 2], "support": 5, "tabl": 5, "tactil": 1, "test": 6, "thread": 1, "time": 4, "type": [1, 2, 4], "usag": [0, 2, 4, 6], "visual": 1, "welcom": 5, "wrapper": 4, "writer": 1, "zcan": 4}})